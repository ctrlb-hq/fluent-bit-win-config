[SERVICE]
    Flush                       1
    Daemon                      Off
    Log_Level                   info
    Parsers_File                C:\Program Files\fluent-bit\conf\parsers-onbe-staging.conf
    HTTP_Server                 On
    HTTP_Listen                 0.0.0.0
    HTTP_Port                   2020
    storage.path                C:\temp\flb-storage
    storage.sync                normal
    storage.checksum            off
    storage.backlog.mem_limit   256M
    storage.max_chunks_up       256

[INPUT]
    Name                        tail
    Path                        C:\Program Files\Microsoft SQL Server\MSSQL*.MSSQLSERVER\MSSQL\Log\ERRORLOG*
    Tag                         log4j.app.sqlserver.errorlog
    DB                          <STORAGE_PATH>\tail-sqlserver-errorlog.db
    DB.Sync                     Normal
    Read_from_Head              true
    Skip_Empty_Lines            On
    Refresh_Interval            1
    Parser                      sql_server_parser
    multiline.parser            sql_server_multiline
    Buffer_Chunk_Size           256K
    Buffer_Max_Size             4M
    Mem_Buf_Limit               50M
    storage.type                filesystem

# Get host IP address periodically
[INPUT]
    Name                        exec
    Tag                         internal.host.ip
    Command                     powershell.exe -ExecutionPolicy Bypass -Command "try { $ip = (Get-NetIPConfiguration | Where-Object {$_.IPv4DefaultGateway -ne $null -and $_.NetAdapter.Status -eq 'Up'} | Select-Object -First 1).IPv4Address.IPAddress; if ($ip) { Write-Output \"host_ip=$ip\" } else { Write-Output \"host_ip=unavailable\" } } catch { Write-Output \"host_ip=error\" }"
    Interval_Sec                60
    Oneshot                     false

# Get comprehensive network info
[INPUT]
    Name                        exec
    Tag                         internal.host.network
    Command                     powershell.exe -ExecutionPolicy Bypass -Command "try { $config = Get-NetIPConfiguration | Where-Object {$_.IPv4DefaultGateway -ne $null -and $_.NetAdapter.Status -eq 'Up'} | Select-Object -First 1; if ($config) { $ip = $config.IPv4Address.IPAddress; $adapter = $config.InterfaceAlias; $gateway = $config.IPv4DefaultGateway.NextHop; Write-Output \"host_ip=$ip,adapter_name=$adapter,gateway=$gateway\" } else { Write-Output \"host_ip=unavailable,adapter_name=unknown,gateway=unknown\" } } catch { Write-Output \"host_ip=error,adapter_name=error,gateway=error\" }"
    Interval_Sec                300
    Oneshot                     false

# Host Information Enrichment Filters (Applied to all logs)
[FILTER]
    Name                        sysinfo
    Match                       *
    Hostname_key                host_name
    Os_name_key                 host_os

# Use modify filter instead of record_modifier to avoid environment variable issues
[FILTER]
    Name                        modify
    Match                       *
    Add                         host_agent fluent-bit
    Add                         host_agent_type log-shipper
    Add                         data_source_type log-file
    Add                         host_platform windows

# Parse and store IP information from exec inputs (don't forward these to output)
[FILTER]
    Name                        lua
    Match                       internal.host.*
    script                      C:\Program Files\fluent-bit\conf\ip_parser.lua
    call                        parse_and_store_ip

# Existing filters
[FILTER]
    Name                        modify
    Match                       *
    Copy                        log body

[FILTER]
    Name                        parser
    Match                       *
    Key_Name                    log
    Parser                      timestamp_only_parser
    Reserve_Data                On

# This adds the _timestamp field and host IP information
[FILTER]
    Name                        lua
    Match                       *
    script                      C:\Program Files\fluent-bit\conf\timestamp_converter.lua
    call                        convert_timestamp

[FILTER]
    Name                        modify
    Match                       *
    Remove                      log_timestamp

[FILTER]
    Name                        modify
    Match                       *
    Condition                   Key_exists log
    Remove                      log

# Drop internal host information collection records (don't send to backend)
[FILTER]
    Name                        grep
    Match                       internal.host.*
    Exclude                     exec .*

[OUTPUT]
    Name                        http
    Match                       log4j.app.*
    Host                        <CTRLB_BACKEND_HOST>
    Port                        <CTRLB_BACKEND_PORT>
    Header                      <CTRLB_BACKEND_AUTH_HEADER>
    URI                         /api/default/staging/_json
    Format                      json
    Header                      Content-Type application/json
    Json_date_key               false
    tls                         Off
    Retry_Limit                 3
    workers                     4